"use client";

import { useState, useEffect } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import { usePathname } from 'next/navigation';

export default function Navbar() {
  const pathname = usePathname();
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  
  // Navigation links
  const navLinks = [
    { name: 'Home', path: '/' },
    { name: 'Characters', path: '/characters' },
    { name: 'Titans', path: '/titans' },
    { name: 'Episodes', path: '/episodes' },
    { name: 'Locations', path: '/locations' },
    { name: 'Organizations', path: '/organizations' },
  ];
  
  // Handle scroll events to change navbar appearance
  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };
    
    window.addEventListener('scroll', handleScroll);
    return () => window.removeEventListener('scroll', handleScroll);
  }, []);
  
  // Close mobile menu when pathname changes
  useEffect(() => {
    setIsMobileMenuOpen(false);
  }, [pathname]);
  
  return (
    <header 
      className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${
        isScrolled 
          ? 'bg-[#0F1923]/90 backdrop-blur-md shadow-lg' 
          : 'bg-transparent'
      }`}
    >
      <div className="container mx-auto px-4 sm:px-6">
        <div className="flex items-center justify-between h-16 md:h-20">
          {/* Logo */}
          <Link 
            href="/" 
            className="flex items-center space-x-2 transition-transform duration-300 transform hover:scale-105"
          >
            <div className="relative h-8 w-8 md:h-10 md:w-10">
              <Image 
                src="/placeholder.png" 
                alt="Attack on Titan Logo"
                fill
                className="object-contain"
              />
            </div>
            <span className="font-bold text-xl md:text-2xl text-white tracking-tight">
              <span className="text-[#FF4655]">Attack</span> on Titan
            </span>
          </Link>
          
          {/* Desktop Navigation */}
          <nav className="hidden md:flex space-x-1 lg:space-x-2">
            {navLinks.map((link) => {
              const isActive = pathname === link.path;
              return (
                <Link
                  key={link.path}
                  href={link.path}
                  className={`relative px-3 py-2 text-sm font-medium transition-all duration-300 group focus:outline-none ${
                    isActive 
                      ? 'text-[#FF4655]' 
                      : 'text-gray-300 hover:text-white'
                  }`}
                >
                  {link.name}
                  <span className={`absolute bottom-0 left-0 h-0.5 bg-[#FF4655]/70 rounded-full transition-all duration-300 ${isActive ? 'w-full' : 'w-0 group-hover:w-full'}`}></span>
                </Link>
              );
            })}
          </nav>
          
          {/* Language Switcher */}
          <div className="hidden md:flex items-center">
            <div className="flex rounded-md overflow-hidden border border-white/10 backdrop-blur-sm shadow-lg ml-3">
              {/* Türkçe */}
              <button 
                type="button"
                className="group flex items-center justify-center p-2 bg-gradient-to-b from-[#FF4655]/20 to-[#FF4655]/10 hover:from-[#FF4655]/30 hover:to-[#FF4655]/20 transition-all duration-300 text-white relative overflow-hidden"
                aria-label="Türkçe"
                title="Türkçe dilini seç"
              >
                <span className="flex items-center justify-center">
                  <div className="w-6 h-5 relative overflow-hidden rounded-sm shadow-inner flex-shrink-0">
                    <Image src="/icons/flags/tr.svg" alt="Türkçe" width={24} height={18} className="object-cover" />
                  </div>
                </span>
                <span className="absolute inset-0 opacity-0 group-hover:opacity-10 bg-white transition-opacity duration-300"></span>
              </button>
              
              {/* Japonca */}
              <button 
                type="button"
                className="group flex items-center justify-center p-2 hover:bg-white/10 transition-all duration-300 text-white/80 hover:text-white relative overflow-hidden border-l border-r border-white/10"
                aria-label="日本語"
                title="日本語に切り替える"
              >
                <span className="flex items-center justify-center">
                  <div className="w-6 h-5 relative overflow-hidden rounded-sm shadow-inner flex-shrink-0">
                    <Image src="/icons/flags/jp.svg" alt="日本語" width={24} height={18} className="object-cover" />
                  </div>
                </span>
                <span className="absolute inset-0 opacity-0 group-hover:opacity-10 bg-white transition-opacity duration-300"></span>
              </button>

              {/* İngilizce */}
              <button 
                type="button"
                className="group flex items-center justify-center p-2 hover:bg-white/10 transition-all duration-300 text-white/80 hover:text-white relative overflow-hidden"
                aria-label="English"
                title="Switch to English"
              >
                <span className="flex items-center justify-center">
                  <div className="w-6 h-5 relative overflow-hidden rounded-sm shadow-inner flex-shrink-0">
                    <Image src="/icons/flags/gb.svg" alt="English" width={24} height={18} className="object-cover" />
                  </div>
                </span>
                <span className="absolute inset-0 opacity-0 group-hover:opacity-10 bg-white transition-opacity duration-300"></span>
              </button>
            </div>
          </div>
          
          {/* Mobile menu button */}
          <button
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
            type="button"
            className="md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-[#FF4655]/20 transition-colors duration-300"
            aria-controls="mobile-menu"
            aria-expanded="false"
          >
            <span className="sr-only">Open main menu</span>
            {!isMobileMenuOpen ? (
              <svg
                className="h-6 w-6"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                aria-hidden="true"
              >
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 6h16M4 12h16M4 18h16" />
              </svg>
            ) : (
              <svg
                className="h-6 w-6"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                aria-hidden="true"
              >
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            )}
          </button>
        </div>
      </div>
      
      {/* Mobile menu */}
      <div
        className={`md:hidden transition-all duration-300 ease-in-out overflow-hidden fixed left-0 right-0 top-16 z-40 ${
          isMobileMenuOpen ? 'max-h-[80vh] opacity-100 translate-y-0' : 'max-h-0 opacity-0 -translate-y-4'
        }`}
        id="mobile-menu"
      >
        <div className="px-2 pt-2 pb-4 space-y-1 sm:px-3 bg-[#0F1923]/95 backdrop-blur-md shadow-lg border-t border-white/5">
          {navLinks.map((link) => {
            const isActive = pathname === link.path;
            return (
              <Link
                key={link.path}
                href={link.path}
                className={`block px-3 py-3 text-base font-medium relative group focus:outline-none ${
                  isActive 
                    ? 'bg-[#FF4655]/10 text-[#FF4655]'
                    : 'text-gray-300 hover:text-white'
                }`}
              >
                {link.name}
                <span className={`absolute bottom-0 left-0 h-0.5 bg-[#FF4655]/70 rounded-full transition-all duration-300 ${isActive ? 'w-full' : 'w-0 group-hover:w-full'}`}></span>
              </Link>
            );
          })}
          
          {/* Mobile Language Switcher */}
          <div className="px-3 py-3 flex flex-col gap-3">
            <div className="text-sm font-medium text-gray-300 pb-1 border-b border-white/10 mb-1 flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" className="h-4 w-4 mr-1.5 text-[#FF4655]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129" />
              </svg>
              Dil Seçenekleri
            </div>
            
            <div className="overflow-hidden rounded-lg border border-white/10 bg-[#0F1923]/70 shadow-lg">
              <button
                type="button"
                className="w-full flex items-center px-4 py-3 bg-gradient-to-r from-[#FF4655]/20 to-transparent text-white transition-all duration-300 border-b border-white/5 hover:bg-[#FF4655]/10 relative overflow-hidden group"
              >
                <div className="w-6 h-5 relative overflow-hidden rounded-sm shadow-inner mr-3 flex-shrink-0">
                  <Image src="/icons/flags/tr.svg" alt="Türkçe" width={24} height={18} className="object-cover" />
                </div>
                <span className="flex flex-col items-start flex-grow">
                  <span className="font-medium">Türkçe</span>
                  <span className="text-xs text-gray-400">Varsayılan Dil</span>
                </span>
                <span className="absolute right-3 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-[#FF4655]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                  </svg>
                </span>
              </button>
              
              <button
                type="button"
                className="w-full flex items-center px-4 py-3 text-gray-300 hover:text-white transition-all duration-300 border-b border-white/5 hover:bg-white/5 relative overflow-hidden group"
              >
                <div className="w-6 h-5 relative overflow-hidden rounded-sm shadow-inner mr-3 flex-shrink-0">
                  <Image src="/icons/flags/jp.svg" alt="日本語" width={24} height={18} className="object-cover" />
                </div>
                <span className="flex flex-col items-start flex-grow">
                  <span className="font-medium">日本語</span>
                  <span className="text-xs text-gray-500">日本語に切り替える</span>
                </span>
                <span className="absolute right-3 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                  </svg>
                </span>
              </button>
              
              <button
                type="button"
                className="w-full flex items-center px-4 py-3 text-gray-300 hover:text-white transition-all duration-300 hover:bg-white/5 relative overflow-hidden group"
              >
                <div className="w-6 h-5 relative overflow-hidden rounded-sm shadow-inner mr-3 flex-shrink-0">
                  <Image src="/icons/flags/gb.svg" alt="English" width={24} height={18} className="object-cover" />
                </div>
                <span className="flex flex-col items-start flex-grow">
                  <span className="font-medium">English</span>
                  <span className="text-xs text-gray-500">Change to English</span>
                </span>
                <span className="absolute right-3 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                  </svg>
                </span>
              </button>
            </div>
          </div>
        </div>
      </div>
    </header>
  );
}
